/*
 * Selling Partner API for Feeds
 * Effective **June 27, 2023**, the Selling Partner API for Feeds v2020-09-04 will no longer be available and all calls to it will fail. Integrations that rely on the Feeds API must migrate to [Feeds v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/feeds-api-v2021-06-30-reference) to avoid service disruption.
 *
 * OpenAPI spec version: 2020-09-04
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.spapi.model.feeds_api_model;

import java.util.Objects;
import java.util.Arrays;
import com.amazon.spapi.model.feeds_api_model.FeedDocumentEncryptionDetails;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Information required to encrypt and upload a feed document&#39;s contents.
 */
@ApiModel(description = "Information required to encrypt and upload a feed document's contents.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-04-27T00:26:18.871-04:00")
public class CreateFeedDocumentResult {
  @SerializedName("feedDocumentId")
  private String feedDocumentId = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("encryptionDetails")
  private FeedDocumentEncryptionDetails encryptionDetails = null;

  public CreateFeedDocumentResult feedDocumentId(String feedDocumentId) {
    this.feedDocumentId = feedDocumentId;
    return this;
  }

   /**
   * The identifier of the feed document.
   * @return feedDocumentId
  **/
  @ApiModelProperty(required = true, value = "The identifier of the feed document.")
  public String getFeedDocumentId() {
    return feedDocumentId;
  }

  public void setFeedDocumentId(String feedDocumentId) {
    this.feedDocumentId = feedDocumentId;
  }

  public CreateFeedDocumentResult url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The presigned URL for uploading the feed contents. This URL expires after 5 minutes.
   * @return url
  **/
  @ApiModelProperty(required = true, value = "The presigned URL for uploading the feed contents. This URL expires after 5 minutes.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public CreateFeedDocumentResult encryptionDetails(FeedDocumentEncryptionDetails encryptionDetails) {
    this.encryptionDetails = encryptionDetails;
    return this;
  }

   /**
   * Get encryptionDetails
   * @return encryptionDetails
  **/
  @ApiModelProperty(required = true, value = "")
  public FeedDocumentEncryptionDetails getEncryptionDetails() {
    return encryptionDetails;
  }

  public void setEncryptionDetails(FeedDocumentEncryptionDetails encryptionDetails) {
    this.encryptionDetails = encryptionDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFeedDocumentResult createFeedDocumentResult = (CreateFeedDocumentResult) o;
    return Objects.equals(this.feedDocumentId, createFeedDocumentResult.feedDocumentId) &&
        Objects.equals(this.url, createFeedDocumentResult.url) &&
        Objects.equals(this.encryptionDetails, createFeedDocumentResult.encryptionDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feedDocumentId, url, encryptionDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFeedDocumentResult {\n");
    
    sb.append("    feedDocumentId: ").append(toIndentedString(feedDocumentId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    encryptionDetails: ").append(toIndentedString(encryptionDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

